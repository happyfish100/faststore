#
# the server group is a physical concept, the data under the same server group
# is the same (redundant or backup).
#
# the data group is a logical or virtual concept, its purpose is to facilitate
# cluster expansion.
#
# cluster expansion: migrate one or more data group(s) to one or more new server group(s).
# data migration: restart after the mappings from data group to server group modified,
# the data replication will be completed automatically.
#
# in order to facilitate cluster expansion, there is a one to many relationship
# between the server groups and the data groups.
# 1 : 64 (server groups : data groups) is recommended.
#
# data is hashed to the server group according to block hash code % the data groups.
# once the number of data groups is set, it can NOT be changed, otherwise
# the data access will be confused!
#
# if you want to change the number of data groups after the formal running of
# the cluster, you MUST create a new cluster and migrate the data to it.

# all data groups must be mapped to the server group(s) without omission.
# once the number of data groups is set, it can NOT be changed, otherwise
# the data access will be confused!
data_group_count = 64

# if use hash function to disperse data group distribution
# default value is false
#
## IMPORTANT NOTE:
##   this parameter can NOT be changed after first run!
use_hash_func = true

# config the auth config filename
auth_config_filename = ../auth/auth.conf

# the file block size, must be the power of two
# the value range is [256KB, 8MB]
# default value is 4MB
#
## IMPORTANT NOTE:
##   this parameter can NOT be changed after first run!
file_block_size = 4MB

# the buffer size for RDMA network communication
# this parameter only for RDMA network
# the min value is 8KB and the max value is 8MB
# default value is 256K
buffer_size = 256K

# if use thread local for connections, value list:
## auto: set to yes when server count <= 64, otherwise no
## yes: enable thread local for connections
## no: disable thread local for connections
# this parameter is valid only when communication set to rdma
# default value is auto
connection_thread_local = auto

# the communication value list:
##  socket: TCP over ethernet or RDMA network
##  rdma: RDMA network only
# default value is socket
communication = socket

# smart polling mode for RDMA network
# auto detect to poll by Linux epoll or RDMA busy polling
# default value is true
smart_polling = true

# switch the polling approach between Linux epoll and RDMA busy polling
# switch to RDMA busy polling when IOPS >= this parameter,
# otherwise switch to Linux epoll
# default value is 10240
polling_switch_on_iops = 10240

# switch to another polling approach when the IOPS meets
# the condition on continuous count / times
# default value is 3
polling_switch_on_count = 3


[leader-election]
# the quorum for leader election
# set quorum to majority to avoid brain-split
# value list:
##  any: no requirement
##  majority: more than half
##  auto: set to majority when the number of nodes is odd,
##        otherwise set to any
# default value is auto
quorum = auto

# the timeout to determinate leader lost
# the default value is 3 seconds
leader_lost_timeout = 3

# the max wait time for leader election
# this parameter is for the leader restart
# the default value is 30 seconds
max_wait_time = 30

# the server can't be elected as leader when it's shutdown duration > this
# parameter unless all servers of the server group are online
# the correct value is in [60, 86400]
# the default value is 300 seconds
max_shutdown_duration = 300

# if enable vote node when the number of servers is even
# the default value is false
vote_node_enabled = false

# the cluster config filename of the vote node
# this parameter is valid when vote_node_enabled is true
vote_node_cluster_filename = ../vote/cluster.conf


[master-election]
# if resume the master role when the preseted server become available
# set this parameter to true for load balance
# default value is true
resume_master_role = true

# weather one slave upgrade to master when the master offline
# set this parameter to false to avoid data inconsistency
# when the network partition occurs
# default value is true
failover = true

# the policy to elect master when failover is true
# normally the server with highest data version is elected as the master
# the value list:
## strict: the master MUST be the server with highest data version
## timeout: wait the the server with highest data version until timeout
####        the timeout format is timeout[:seconds], such as timeout:30,
####        the default timeout is 60 seconds when timeout keyword only
# default value is strict
policy = strict


[data-replication]
# the quorum for data replication
# set quorum to majority for strict data consistency and high data security
# value list:
##  any: no requirement
##  majority: more than half strictly
##  smart: set to majority when more than half nodes are active,
##        otherwise set to any, smart mode is mainly for two replicas
##  auto: set to majority when the number of nodes is odd,
##        otherwise set to smart
# default value is auto
quorum = auto

# deactive the slave node when connect fail times exceeds this parameter
# this parameter is valid when quorum is smart or
# quorum is auto and the number of nodes is even
# default value is 3
deactive_on_failures = 3


[group-cluster]
# the default cluster port
port = 21014

# the communication value list:
##  socket: TCP over ethernet or RDMA network
##  rdma: RDMA network only
# default value by the global config with same name
communication = socket

# smart polling mode for RDMA network
# auto detect to poll by Linux epoll or RDMA busy polling
# default value by the global config with same name
smart_polling = true

# switch the polling approach between Linux epoll and RDMA busy polling
# switch to RDMA busy polling when IOPS >= this parameter,
# otherwise switch to Linux epoll
# default value by the global config with same name
polling_switch_on_iops = 10240

# switch to another polling approach when the IOPS meets
# the condition on continuous count / times
# default value by the global config with same name
polling_switch_on_count = 3

# the buffer size for RDMA network communication
# this parameter only for RDMA network
# the min value is 8KB and the max value is 8MB
# default value by the global config with same name
buffer_size = 256K


[group-replica]
# the default replica port
port = 21015

## other config items please see section: [group-cluster]
## such as: communication, smart_polling etc.


[group-service]
# the default service port
port = 21016

## other config items please see section: [group-cluster]
## such as: communication, smart_polling etc.


## Important:server group mark, don't modify this line.

# config a server group
# the data under the same server group is the same (redundant or backup)
# the section format: [server-group-$sgid]
# $sgid as the server group id is a 32 bits natural number (1, 2, 3 etc.), can be discrete
[server-group-1]

# config one or more server id(s)
## multiple server ids separated by comma(s).
## [start, end] for range, including start and end.
# this parameter can occurs more than once.
# server_ids = [1, 3]
server_ids = 1

# the data group id based 1. the formats as:
##  * multiple data group ids separated by comma(s).
##  * [start, end] for range, including start and end.
# this parameter can occurs more than once.
data_group_ids = [1, 32]
data_group_ids = [33, 64]


# config a server
# the section format: [server-$sid]
# $sid as the server id is a 32 bits natural number (1, 2, 3 etc.), can be discrete
[server-1]

# format: host[:port]
# host can be an IP address or a hostname, IPv6 is supported
# IP address is recommended
# can occur more than once
host = 172.16.168.128

# [server-2]
# host = 172.16.168.129

# [server-3]
# host = 172.16.168.130
